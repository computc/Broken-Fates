version: 2
references:
  docker_image: &docker_image
    docker:
    - image: gableroux/unity3d:2018.3.3f1
  setup_unity_license_env_var: &setup_unity_license_env_var
    command: |
      openssl version
      openssl aes-256-cbc -md md5 -d -in ./ci/Unity_v2018.x.ulf-cipher -out Unity_v2018.x.ulf -k $KEY
      export UNITY_LICENSE_CONTENT=`cat Unity_v2018.x.ulf`
      rm Unity_v2018.x.ulf
jobs:
  test_editmode:
    <<: *docker_image
    steps:
    # TODO: Update once git is added to image, remove this
    - run:
        command: apt-get update && apt-get install -y git && git --version
    - checkout
    - run:
        <<: *setup_unity_license_env_var
    - run:
        environment:
          TEST_PLATFORM: editmode
        command: "chmod +x ./ci/test.sh && ./ci/test.sh"
    - store_artifacts:
        path: "$(pwd)/$TEST_PLATFORM-results.xml"
        destination: "$TEST_PLATFORM-results.xml"
  test_playmode:
    <<: *docker_image
    steps:
    - run:
        command: apt-get update && apt-get install -y git && git --version
    - checkout
    - run:
        <<: *setup_unity_license_env_var
    - run:
        environment:
          TEST_PLATFORM: playmode
        command: "chmod +x ./ci/test.sh && ./ci/test.sh"
    - store_artifacts:
        path: "$(pwd)/$TEST_PLATFORM-results.xml"
        destination: "$TEST_PLATFORM-results.xml"
  build_StandaloneLinux64:
    <<: *docker_image
    steps:
    - run:
        command: apt-get update && apt-get install -y git && git --version
    - checkout
    - run:
        <<: *setup_unity_license_env_var
    - run:
        environment:
          BUILD_TARGET: StandaloneLinux64
        command: "chmod +x ./ci/build.sh && ./ci/build.sh"
    - store_artifacts:
        path: "./Builds/"
workflows:
  version: 2
  test_and_build:
    jobs:
    - test_editmode
    - test_playmode
    - build_StandaloneLinux64